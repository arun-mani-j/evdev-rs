name: CI
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [stable, beta, nightly, arm-gnueabi, arm-gnueabihf]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - build: beta
            os: ubuntu-latest
            rust: beta
            target: x86_64-unknown-linux-gnu
          - build: nightly
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-gnu
          - build: arm-gnueabi 
            os: ubuntu-latest
            rust: stable
            target: arm-unknown-linux-gnueabi
            packages: "gcc-arm-linux-gnueabi libc6-armel-cross libc6-dev-armel-cross"
          - build: arm-gnueabihf 
            os: ubuntu-latest
            rust: stable
            target: arm-unknown-linux-gnueabihf
            packages: "gcc-arm-linux-gnueabihf libc6-armhf-cross libc6-dev-armhf-cross"
    steps:
    - run: sudo apt install ${{ matrix.packages }}
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Install Rust
      run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }} && rustup target add ${{ matrix.target }}
      shell: bash
    - run: cargo build --target ${{ matrix.target }} --verbose
    - run: cargo build --target ${{ matrix.target }} --verbose --no-default-features
    - run: cargo build --target ${{ matrix.target }} --verbose --all-features
    - run: sudo --preserve-env env "PATH=$PATH" cargo test --verbose
      if: contains(matrix.target, 'x86_64') 
    - run: sudo --preserve-env env "PATH=$PATH" cargo test --all-features --verbose
      if: contains(matrix.target, 'x86_64') 

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - run: cargo fmt -- --check

  publish_docs:
    name: Publish Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: Build documentation
        run: cargo doc --no-deps --all-features
      - name: Publish documentation
        run: |
          cd target/doc
          git init
          git add .
          git -c user.name='ci' -c user.email='ci' commit -m init
          git push -f -q https://git:${{ secrets.github_token }}@github.com/${{ github.repository }} HEAD:gh-pages
        if: github.event_name == 'push' && github.event.ref == 'refs/heads/master'
